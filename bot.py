import os
import logging
from telegram import Update
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes
import openai

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏
TELEGRAM_TOKEN = os.getenv('TELEGRAM_TOKEN')
OPENAI_API_KEY = os.getenv('OPENAI_API_KEY')

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ OpenAI
client = openai.OpenAI(api_key=OPENAI_API_KEY)

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = """
–ü—Ä–∏–≤–µ—Ç! üîÆ –Ø - AI-—Ç–∞—Ä–æ–ª–æ–≥. 
–ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏ –º–Ω–µ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å, –∏ —è –ø–æ—Å–º–æ—Ç—Ä—é, —á—Ç–æ –≥–æ–≤–æ—Ä—è—Ç –∫–∞—Ä—Ç—ã.

–ò—Å–ø–æ–ª—å–∑—É–π /card –¥–ª—è —Å–ª—É—á–∞–π–Ω–æ–π –∫–∞—Ä—Ç—ã –¥–Ω—è.
    """
    await update.message.reply_text(text)

async def card_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.chat.send_action(action="typing")
    
    # –û–±—â–∞–µ–º—Å—è —Å –ò–ò
    response = client.chat.completions.create(
        model="gpt-3.5-turbo",
        messages=[
            {"role": "system", "content": "–¢—ã - –º—É–¥—Ä—ã–π —Ç–∞—Ä–æ–ª–æ–≥. –î–∞–π –∫—Ä–∞—Ç–∫–æ–µ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ –Ω–∞ –¥–µ–Ω—å (2-3 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è) –≤ –º–∏—Å—Ç–∏—á–µ—Å–∫–æ–º —Å—Ç–∏–ª–µ."},
            {"role": "user", "content": "–í—ã—Ç–∞—â–∏ —Å–ª—É—á–∞–π–Ω—É—é –∫–∞—Ä—Ç—É –¢–∞—Ä–æ –∏ –¥–∞–π –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ"}
        ],
        max_tokens=150
    )
    
    prediction = response.choices[0].message.content
    await update.message.reply_text(f"üÉè –ö–∞—Ä—Ç–∞ –¥–Ω—è: \n\n{prediction}")

async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_message = update.message.text
    if user_message.startswith('/'):
        return

    await update.message.chat.send_action(action="typing")
    
    response = client.chat.completions.create(
        model="gpt-3.5-turbo", 
        messages=[
            {"role": "system", "content": "–¢—ã - —ç–∑–æ—Ç–µ—Ä–∏—á–µ—Å–∫–∏–π —Ç–∞—Ä–æ–ª–æ–≥. –û—Ç–≤–µ—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –º–µ—Ç–∞—Ñ–æ—Ä–∏—á–Ω–æ, –∫–∞–∫ –ø—Ä–∏ –≥–∞–¥–∞–Ω–∏–∏ –Ω–∞ –∫–∞—Ä—Ç–∞—Ö. –ë—É–¥—å –∑–∞–≥–∞–¥–æ—á–Ω—ã–º."},
            {"role": "user", "content": user_message}
        ],
        max_tokens=200
    )
    
    answer = response.choices[0].message.content
    await update.message.reply_text(f"üîÆ {answer}")

def main():
    app = Application.builder().token(TELEGRAM_TOKEN).build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("card", card_command))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))
    app.run_polling()

if __name__ == '__main__':
    main()
